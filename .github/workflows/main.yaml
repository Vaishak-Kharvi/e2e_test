name: Run Selenium On GitHub Action
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checking out repo
        uses: actions/checkout@v3
      - name: Setting up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Installing package list
        run: apt list --installed

      - name: Check verion/path
        run: |
          google-chrome --version
          chromedriver --version
          readlink -f chromedriver

      - name: Install requirements
        run: |
          pip install -r requirements.txt

      - name: Install Allure
        run: |
          wget -q https://github.com/allure-framework/allure2/releases/download/2.24.1/allure_2.24.1-1_all.deb
          sudo dpkg -i allure_2.24.1-1_all.deb

      - name: Running the Python script
        run: |
          pytest -m test_run -v -s --disable-warnings --alluredir=allure-results

      - name: Check out to GH page
        run: |
          git fetch
          git checkout -f gh-pages --
          
          #echo "index.html"
          echo "<!DOCTYPE html><meta charset=\"utf-8\"><meta http-equiv=\"refresh\" content=\"0; URL=https://Vaishak-Kharvi.github.io/e2e_test/${{ github.run_number }}/\">" > ./index.html # path
          echo "<meta http-equiv=\"Pragma\" content=\"no-cache\"><meta http-equiv=\"Expires\" content=\"0\">" >> ./index.html
          #cat ./allure-history/index.html

          cp -r ./last-history/. ./allure-results/history
          allure generate --clean allure-results -o allure-report
          echo "copy allure-report to ${{ github.run_number }}"
          cp -r ./allure-report/. ./${{ github.run_number }}
          echo "copy allure-report history to /allure-history/last-history"
          cp -r ./allure-report/history/. ./last-history
          ls
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add ${{ github.run_number }}
          git add index.html
          git commit -m "Automated commit ${date}"
          git push origin gh-pages
        env:
         destination-branch: gh-pages



#      - name: Get Allure history
#        uses: actions/checkout@v2
#        if: always()
#        continue-on-error: true
#        with:
#          ref: gh-pages
#          path: gh-pages

#      - name: Allure Report action from marketplace
#        uses: simple-elf/allure-report-action@master
#        if: always()
#        id: allure-report
#        with:
#          allure_results: target/allure-results
#          gh_pages: gh-pages
#          allure_report: allure-report
#          allure_history: allure-history

#      - name: Generate Report
#        run: |
#          mkdir -p ./gh-pages
#          mkdir -p ./allure-history
#          cp -r ./gh-pages/. ./allure-history
#
#          REPOSITORY_OWNER_SLASH_NAME=${{ github.repository }}
#          REPOSITORY_NAME=${REPOSITORY_OWNER_SLASH_NAME##*/}
#          GITHUB_PAGES_WEBSITE_URL="https://${{ github.repository_owner }}.github.io/${REPOSITORY_NAME}"
#          #echo "Github pages url $GITHUB_PAGES_WEBSITE_URL"
#
#          if [[ '' != '' ]]; then
#              INPUT_ALLURE_HISTORY="allure-history/''"
#              INPUT_GH_PAGES="gh-pages/''"
#              echo "NEW allure history folder allure-history"
#              mkdir -p ./allure-history
#              GITHUB_PAGES_WEBSITE_URL="${GITHUB_PAGES_WEBSITE_URL}/''"
#              echo "NEW github pages url ${GITHUB_PAGES_WEBSITE_URL}"
#          fi
#
#          if [[ '' != '' ]]; then
#              GITHUB_PAGES_WEBSITE_URL="''"
#              echo "Replacing github pages url with user input. NEW url ${GITHUB_PAGES_WEBSITE_URL}"
#          fi
#
#          COUNT=$( ( ls ./allure-history | wc -l ) )
#          echo "count folders in allure-history: ${COUNT}"
#          echo "keep reports count 20"
#          INPUT_KEEP_REPORTS=$((20+1))
#          echo "if ${COUNT} > ${INPUT_KEEP_REPORTS}"
#          if (( ${COUNT} > ${INPUT_KEEP_REPORTS} )); then
#            cd ./allure-history
#            echo "remove index.html last-history"
#            rm index.html last-history -rv
#            echo "remove old reports"
#            ls | sort -n | head -n -$((20-2)) | xargs rm -rv;
#            cd ${GITHUB_WORKSPACE}
#          fi
#
#          #echo "index.html"
#          echo "<!DOCTYPE html><meta charset=\"utf-8\"><meta http-equiv=\"refresh\" content=\"0; URL=${GITHUB_PAGES_WEBSITE_URL}/${{ github.run_number }}/\">" > ./allure-history/index.html # path
#          echo "<meta http-equiv=\"Pragma\" content=\"no-cache\"><meta http-equiv=\"Expires\" content=\"0\">" >> ./allure-history/index.html
#          #cat ./allure-history/index.html
#
#          #echo "executor.json"
#          echo '{"name":"GitHub Actions","type":"github","reportName":"Allure Report with history",' > executor.json
#          echo "\"url\":\"${GITHUB_PAGES_WEBSITE_URL}\"," >> executor.json # ???
#          echo "\"reportUrl\":\"${GITHUB_PAGES_WEBSITE_URL}/${{ github.run_number }}/\"," >> executor.json
#          echo "\"buildUrl\":\"https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}\"," >> executor.json
#          echo "\"buildName\":\"GitHub Actions Run #${{ github.run_id }}\",\"buildOrder\":\"${{ github.run_number }}\"}" >> executor.json
#          #cat executor.json
#          mv ./executor.json ./allure-results
#
#          #environment.properties
#          echo "URL=${GITHUB_PAGES_WEBSITE_URL}" >> ./allure-results/environment.properties
#
#          echo "keep allure history from gh-pages/last-history to allure-results/history"
#          cp -r ./gh-pages/last-history/. ./allure-results/history
#
#          echo "generating report from allure-results to allure-report ..."
#          #ls -l allure-results
#          allure generate --clean allure-results -o allure-report
#          #echo "listing report directory ..."
#          #ls -l allure-report
#
#          echo "copy allure-report to allure-history/${{ github.run_number }}"
#          cp -r ./allure-report/. ./allure-history/${{ github.run_number }}
#          echo "copy allure-report history to /allure-history/last-history"
#          cp -r ./allure-report/history/. ./allure-history/last-history
#
#      - name: Copy folder to destination
#        run: |
#          git fetch
#          git checkout -f gh-pages --
#          git config user.name github-actions
#          git config user.email github-actions@github.com
#          git commit -a
#          git push origin gh-pages
#        env:
#         destination-branch: gh-pages
#          git fetch
#          git checkout -f gh-pages
#          ls
##          cp -r allure-history/* .
#          git config user.name github-actions
#          git config user.email github-actions@github.com
#          git add allure-history
#          git commit -m "copied folder to source"
#          git push origin gh-pages
#        env:
#          destination-branch: gh-pages
##
#      - name: Get Allure history
#        uses: actions/checkout@v2
#        if: always()
#        continue-on-error: true
#        with:
#          ref: gh-pages
#          path: gh-pages
#
#      - name: Allure Report action from marketplace
#        uses: simple-elf/allure-report-action@master
#        if: always()
#        id: allure-report
#        with:
#          allure_results: target/allure-results
#          gh_pages: gh-pages
#          allure_report: allure-report
#          allure_history: allure-history
#
#
#      - name: Commit
#        run: |
#          git config --global user.name "GitHub Actions"
#          git config --global user.email "actions@github.com"
#          ls
#          git branch
#          git -b checkout gh-pages
#          ls
#          git status
#          git add .
#          git commit -m "test"
#          git push
#
#      - uses: actions/checkout@v4
#        with:
#          clean: false
#      - run: |
#          git config user.name github-actions
#          git config user.email github-actions@github.com
#          git add ./allure-report
#          git commit -m "generated"
#          git push origin gh-pages --force

#      - name: Setup Pages
#        uses: actions/configure-pages@v2
#      - name: Upload artifact
#        uses: actions/upload-pages-artifact@v1
#        with:
#          # Upload entire repository
#          path: ./allure-report
#      - name: Deploy to GitHub Pages
#        id: deployment
#        uses: actions/deploy-pages@v1
#
#      - name: Deploy report to Github Pages
#        if: always()
#        uses: peaceiris/actions-gh-pages@v2
#        env:
#          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          PUBLISH_BRANCH: gh-pages
#          PUBLISH_DIR: allure-history
